resp=resd.csv('D1_scored.csv')
x <- rnorm(100,mean=5,sd=0.1)
mean(x)
sd(x)
summary(x)
demo(graphics)
coef(monopoly,simplify=TRUE)
monopoly<-mirt(data,1,'monopoly')
coef(monopoly,simplify=TRUE)
install.packages('mirt')
library('mirt')
monopoly<-mirt(data,1,'monopoly')
coef(monopoly,simplify=TRUE)
setwd("E:/study/2020Spring/数据科学基础/大作业/github/datasci-coursework/period1_xzh/rasch/group_4")
getwd()
install.packages('TAM')
library('TAM')
install.packages('ggplot2')
library('ggplot2')
install.packages('mirt')
install.packages('ShinyItemAnalysis')
library('ShinyItemAnalysis')
library('mirt')
install.packages("TAM")
install.packages("TAM")
#使用erm
res_rm_all = RM(resp_all)
#使用erm
res_rm_all = RM(resp_all)
install.packages("eRm")
install.packages("ltm")
install.packages("difR")
library("eRm")
library("ltm")
library("difR")
install.packages("ltm")
install.packages("difR")
#使用erm
res_rm_all = RM(resp_all)
#读取数据
resp_all = read.csv("group1_results0_1.csv")
resp_array = read.csv("group1_results_array_0_1.csv")
resp_graph = read.csv("group1_results_graph_0_1.csv")
resp_linear = read.csv("group1_results_linear_0_1.csv")
resp_number = read.csv("group1_results_number_0_1.csv")
resp_searching = read.csv("group1_results_searching_0_1.csv")
resp_sorting = read.csv("group1_results_sorting_0_1.csv")
resp_string = read.csv("group1_results_string_0_1.csv")
resp_tree = read.csv("group1_results_tree_0_1.csv")
setwd("E:/study/2020Spring/数据科学基础/大作业/github/datasci-coursework/period1_xzh/rasch/group_1")
#读取数据
resp_all = read.csv("group1_results0_1.csv")
resp_array = read.csv("group1_results_array_0_1.csv")
resp_graph = read.csv("group1_results_graph_0_1.csv")
resp_linear = read.csv("group1_results_linear_0_1.csv")
resp_number = read.csv("group1_results_number_0_1.csv")
resp_searching = read.csv("group1_results_searching_0_1.csv")
resp_sorting = read.csv("group1_results_sorting_0_1.csv")
resp_string = read.csv("group1_results_string_0_1.csv")
resp_tree = read.csv("group1_results_tree_0_1.csv")
#使用erm
res_rm_all = RM(resp_all)
plotjointICC(res_rm_all, item.subset =  1:20, cex = .6)
#使用erm
res_rm_all = RM(resp_all)
plotjointICC(res_rm_all, item.subset =  1:20, cex = .6)
res_rm_array =RM(resp_array)
plotjointICC(res_rm_array, item.subset =  1:20)
res_rm_array =RM(resp_array)
plotjointICC(res_rm_array)
#使用erm
res_rm_all = RM(resp_all)
plotjointICC(res_rm_all,  cex = .6)
