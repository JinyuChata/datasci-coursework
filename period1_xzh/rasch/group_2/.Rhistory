resp=resd.csv('D1_scored.csv')
x <- rnorm(100,mean=5,sd=0.1)
mean(x)
sd(x)
summary(x)
demo(graphics)
coef(monopoly,simplify=TRUE)
monopoly<-mirt(data,1,'monopoly')
coef(monopoly,simplify=TRUE)
install.packages('mirt')
library('mirt')
monopoly<-mirt(data,1,'monopoly')
coef(monopoly,simplify=TRUE)
setwd("E:/study/2020Spring/数据科学基础/大作业/github/datasci-coursework/period1_xzh/rasch/group_4")
getwd()
install.packages('TAM')
library('TAM')
install.packages('ggplot2')
library('ggplot2')
install.packages('mirt')
install.packages('ShinyItemAnalysis')
library('ShinyItemAnalysis')
library('mirt')
#读取数据
resp_all = read.csv("group4_results0_1.csv")
resp_array = read.csv("group4_results_array_0_1.csv")
resp_graph = read.csv("group4_results_graph_0_1.csv")
resp_linear = read.csv("group4_results_linear_0_1.csv")
resp_number = read.csv("group4_results_number_0_1.csv")
resp_searching = read.csv("group4_results_searching_0_1.csv")
resp_sorting = read.csv("group4_results_sorting_0_1.csv")
resp_string = read.csv("group4_results_string_0_1.csv")
resp_tree = read.csv("group4_results_tree_0_1.csv")
#跑tam
result_all = tam(resp_all)
result_array = tam(resp_array)
result_graph = tam(resp_graph)
result_linear = tam(resp_linear)
result_number = tam(resp_number)
result_searching = tam(resp_searching)
result_sorting = tam(resp_sorting)
result_string = tam(resp_string)
result_tree = tam(resp_tree)
#获取难度参数
difficulty_param_all=result_all$xsi$xsi
difficulty_param_array=result_array$xsi$xsi
difficulty_param_graph=result_graph$xsi$xsi
difficulty_param_linear=result_linear$xsi$xsi
difficulty_param_number=result_number$xsi$xsi
difficulty_param_searching=result_searching$xsi$xsi
difficulty_param_sorting=result_sorting$xsi$xsi
difficulty_param_string=result_string$xsi$xsi
difficulty_param_tree=result_tree$xsi$xsi
#学生能力
ability = tam.wle(result_all)
ability_param_all=(tam.wle(result_all))$theta
ability_param_array=(tam.wle(result_array))$theta
ability_param_graph=(tam.wle(result_graph))$theta
ability_param_linear=(tam.wle(result_linear))$theta
ability_param_number=(tam.wle(result_number))$theta
ability_param_searching=(tam.wle(result_searching))$theta
ability_param_sorting=(tam.wle(result_sorting))$theta
ability_param_string=(tam.wle(result_string))$theta
ability_param_tree=(tam.wle(result_tree))$theta
#wrightmap图片
install.packages("WrightMap")
library("WrightMap")
windows()
wrightMap(ability_param_all,difficulty_param_all,
person.side = personDens,show.axis.logits = TRUE)
View(resp_all)
View(resp_all)
library('mirt')
#读取数据
resp_all = read.csv("group5_results0_1.csv")
resp_array = read.csv("group5_results_array_0_1.csv")
resp_graph = read.csv("group5_results_graph_0_1.csv")
resp_linear = read.csv("group5_results_linear_0_1.csv")
resp_number = read.csv("group5_results_number_0_1.csv")
resp_searching = read.csv("group5_results_searching_0_1.csv")
resp_sorting = read.csv("group5_results_sorting_0_1.csv")
resp_string = read.csv("group5_results_string_0_1.csv")
resp_tree = read.csv("group5_results_tree_0_1.csv")
#跑tam
result_all = tam(resp_all)
result_array = tam(resp_array)
result_graph = tam(resp_graph)
result_linear = tam(resp_linear)
result_number = tam(resp_number)
result_searching = tam(resp_searching)
result_sorting = tam(resp_sorting)
result_string = tam(resp_string)
result_tree = tam(resp_tree)
#获取难度参数
difficulty_param_all=result_all$xsi$xsi
difficulty_param_array=result_array$xsi$xsi
difficulty_param_graph=result_graph$xsi$xsi
difficulty_param_linear=result_linear$xsi$xsi
difficulty_param_number=result_number$xsi$xsi
difficulty_param_searching=result_searching$xsi$xsi
difficulty_param_sorting=result_sorting$xsi$xsi
difficulty_param_string=result_string$xsi$xsi
difficulty_param_tree=result_tree$xsi$xsi
#学生能力
ability = tam.wle(result_all)
ability_param_all=(tam.wle(result_all))$theta
ability_param_array=(tam.wle(result_array))$theta
ability_param_graph=(tam.wle(result_graph))$theta
ability_param_linear=(tam.wle(result_linear))$theta
ability_param_number=(tam.wle(result_number))$theta
ability_param_searching=(tam.wle(result_searching))$theta
ability_param_sorting=(tam.wle(result_sorting))$theta
ability_param_string=(tam.wle(result_string))$theta
ability_param_tree=(tam.wle(result_tree))$theta
View(resp_all)
#读取数据
resp_all = read.csv("group5_results0_1.csv")
setwd("E:/study/2020Spring/数据科学基础/大作业/github/datasci-coursework/period1_xzh/rasch/group_5")
#读取数据
resp_all = read.csv("group5_results0_1.csv")
View(resp_all)
resp_all = read.csv("group5_results0_1.csv")
resp_array = read.csv("group5_results_array_0_1.csv")
resp_graph = read.csv("group5_results_graph_0_1.csv")
resp_linear = read.csv("group5_results_linear_0_1.csv")
resp_number = read.csv("group5_results_number_0_1.csv")
resp_searching = read.csv("group5_results_searching_0_1.csv")
resp_sorting = read.csv("group5_results_sorting_0_1.csv")
resp_string = read.csv("group5_results_string_0_1.csv")
resp_tree = read.csv("group5_results_tree_0_1.csv")
#跑tam
result_all = tam(resp_all)
result_array = tam(resp_array)
result_graph = tam(resp_graph)
result_linear = tam(resp_linear)
result_number = tam(resp_number)
result_searching = tam(resp_searching)
result_sorting = tam(resp_sorting)
result_string = tam(resp_string)
result_tree = tam(resp_tree)
#获取难度参数
difficulty_param_all=result_all$xsi$xsi
difficulty_param_array=result_array$xsi$xsi
difficulty_param_graph=result_graph$xsi$xsi
difficulty_param_linear=result_linear$xsi$xsi
difficulty_param_number=result_number$xsi$xsi
difficulty_param_searching=result_searching$xsi$xsi
difficulty_param_sorting=result_sorting$xsi$xsi
difficulty_param_string=result_string$xsi$xsi
difficulty_param_tree=result_tree$xsi$xsi
#学生能力
ability = tam.wle(result_all)
ability_param_all=(tam.wle(result_all))$theta
ability_param_array=(tam.wle(result_array))$theta
ability_param_graph=(tam.wle(result_graph))$theta
ability_param_linear=(tam.wle(result_linear))$theta
ability_param_number=(tam.wle(result_number))$theta
ability_param_searching=(tam.wle(result_searching))$theta
ability_param_sorting=(tam.wle(result_sorting))$theta
ability_param_string=(tam.wle(result_string))$theta
ability_param_tree=(tam.wle(result_tree))$theta
#wrightmap图片
install.packages("WrightMap")
library("WrightMap")
install.packages("WrightMap")
install.packages("WrightMap")
windows()
wrightMap(ability_param_all,difficulty_param_all,
person.side = personDens,show.axis.logits = TRUE)
View(resp_all)
ggWrightMap(ability_param_tree,difficulty_param_tree,color = 'grey')
setwd("E:/study/2020Spring/数据科学基础/大作业/github/datasci-coursework/period1_xzh/rasch/group_5")
getwd()
install.packages('TAM')
library('TAM')
install.packages('ggplot2')
library('ggplot2')
install.packages('mirt')
install.packages('ShinyItemAnalysis')
library('ShinyItemAnalysis')
library('mirt')
ggWrightMap(ability_param_tree,difficulty_param_tree,color = 'grey')
windows()
ggWrightMap(ability_param_tree,difficulty_param_tree,color = 'grey')
ggWrightMap(ability_param_all,difficulty_param_all,color = 'grey')
#windows()
jpeg(file="group5_all.jpg",width=2000,height=2000)
p=ggWrightMap(ability_param_all,difficulty_param_all,color = 'grey')
print(p)
dev.off()
#windows()
jpeg(file="group5_all.jpg",width=2000,height=1000)
p=ggWrightMap(ability_param_all,difficulty_param_all,color = 'grey')
print(p)
dev.off()
#windows()
jpeg(file="group5_all.jpg",width=16000,height=1000)
p=ggWrightMap(ability_param_all,difficulty_param_all,color = 'grey')
print(p)
dev.off()
#windows()
jpeg(file="group5_all.jpg",width=1600,height=1000)
p=ggWrightMap(ability_param_all,difficulty_param_all,color = 'grey')
print(p)
dev.off()
#windows()
jpeg(file="group5_all.jpg",width=2000,height=1000)
p=ggWrightMap(ability_param_all,difficulty_param_all,color = 'grey')
print(p)
dev.off()
#windows()
jpeg(file="group5_all.jpg",width=1800,height=1000)
p=ggWrightMap(ability_param_all,difficulty_param_all,color = 'grey')
print(p)
dev.off()
windows()
wrightMap(ability_param_all,difficulty_param_all,
person.side = personDens,show.axis.logits = TRUE)
setwd("E:/study/2020Spring/数据科学基础/大作业/github/datasci-coursework/period1_xzh/rasch/group_2")
getwd()
install.packages('TAM')
library('TAM')
install.packages('ggplot2')
library('ggplot2')
install.packages('mirt')
install.packages('ShinyItemAnalysis')
library('ShinyItemAnalysis')
library('mirt')
#读取数据
resp_all = read.csv("group2_results0_1.csv")
resp_array = read.csv("group2_results_array_0_1.csv")
resp_graph = read.csv("group2_results_graph_0_1.csv")
resp_linear = read.csv("group2_results_linear_0_1.csv")
resp_number = read.csv("group2_results_number_0_1.csv")
resp_searching = read.csv("group2_results_searching_0_1.csv")
resp_sorting = read.csv("group2_results_sorting_0_1.csv")
resp_string = read.csv("group2_results_string_0_1.csv")
resp_tree = read.csv("group2_results_tree_0_1.csv")
#跑tam
result_all = tam(resp_all)
result_array = tam(resp_array)
result_graph = tam(resp_graph)
result_linear = tam(resp_linear)
result_number = tam(resp_number)
result_searching = tam(resp_searching)
result_sorting = tam(resp_sorting)
result_string = tam(resp_string)
result_tree = tam(resp_tree)
#获取难度参数
difficulty_param_all=result_all$xsi$xsi
difficulty_param_array=result_array$xsi$xsi
difficulty_param_graph=result_graph$xsi$xsi
difficulty_param_linear=result_linear$xsi$xsi
difficulty_param_number=result_number$xsi$xsi
difficulty_param_searching=result_searching$xsi$xsi
difficulty_param_sorting=result_sorting$xsi$xsi
difficulty_param_string=result_string$xsi$xsi
difficulty_param_tree=result_tree$xsi$xsi
#学生能力
ability = tam.wle(result_all)
ability_param_all=(tam.wle(result_all))$theta
ability_param_array=(tam.wle(result_array))$theta
ability_param_graph=(tam.wle(result_graph))$theta
ability_param_linear=(tam.wle(result_linear))$theta
ability_param_number=(tam.wle(result_number))$theta
ability_param_searching=(tam.wle(result_searching))$theta
ability_param_sorting=(tam.wle(result_sorting))$theta
ability_param_string=(tam.wle(result_string))$theta
ability_param_tree=(tam.wle(result_tree))$theta
install.packages("TAM")
install.packages("ggplot2")
install.packages("mirt")
install.packages("ShinyItemAnalysis")
install.packages("mirt")
#windows()
jpeg(file="group2_all.jpg",width=1800,height=1000)
p=ggWrightMap(ability_param_all,difficulty_param_all,color = 'grey')
print(p)
dev.off()
#windows()
jpeg(file="group2_all.jpg",width=2400,height=1000)
p=ggWrightMap(ability_param_all,difficulty_param_all,color = 'grey')
print(p)
dev.off()
